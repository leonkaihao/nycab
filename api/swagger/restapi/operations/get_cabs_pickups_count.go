// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetCabsPickupsCountHandlerFunc turns a function with the right signature into a get cabs pickups count handler
type GetCabsPickupsCountHandlerFunc func(GetCabsPickupsCountParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCabsPickupsCountHandlerFunc) Handle(params GetCabsPickupsCountParams) middleware.Responder {
	return fn(params)
}

// GetCabsPickupsCountHandler interface for that can handle valid get cabs pickups count params
type GetCabsPickupsCountHandler interface {
	Handle(GetCabsPickupsCountParams) middleware.Responder
}

// NewGetCabsPickupsCount creates a new http.Handler for the get cabs pickups count operation
func NewGetCabsPickupsCount(ctx *middleware.Context, handler GetCabsPickupsCountHandler) *GetCabsPickupsCount {
	return &GetCabsPickupsCount{Context: ctx, Handler: handler}
}

/*GetCabsPickupsCount swagger:route GET /cabs/pickups/count getCabsPickupsCount

Query how many trips a particular cab (medallion) has made given a particular pickup date.

*/
type GetCabsPickupsCount struct {
	Context *middleware.Context
	Handler GetCabsPickupsCountHandler
}

func (o *GetCabsPickupsCount) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetCabsPickupsCountParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
